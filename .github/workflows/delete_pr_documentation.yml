name: Delete PR Documentation

on:
  workflow_call:
    inputs:
      package_name:
        required: true
        type: string
    secrets:
      hf_token:
        required: true

jobs:
  upload_pr_documentation:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'

    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'huggingface/doc-builder'
          path: doc-builder

      - name: Setup environment
        shell: bash
        run: |
          pip install black
          pip uninstall -y doc-builder
          cd doc-builder
          git pull origin main
          pip install .
          cd ..
          echo "current_work_dir=$(pwd)" >> $GITHUB_ENV

      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "doc-delete-artifact"
            })[0];
            var download = await github.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{env.current_work_dir}}/doc-delete-artifact.zip', Buffer.from(download.data));
        
      - run: |
          mkdir build_dir
          unzip doc-delete-artifact.zip -d build_dir

      - name: Get pr_number
        run: |
          echo "pr_number=$(cat ./build_dir/pr_number)" >> $GITHUB_ENV
          rm -rf ./build_dir/pr_number

      - name: Push to repositories
        run: |
          doc-builder push ${{ inputs.package_name }} --doc_build_repo_id "hf-doc-build/doc-build-dev" --token "${{ secrets.hf_token }}" --commit_msg "Closed PR ${{ env.pr_number }} in ${{ inputs.package_name }}" --n_retries 5 --doc_version "pr_${{ env.pr_number }}" --is_remove
        shell: bash
      