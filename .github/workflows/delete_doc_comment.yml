name: Delete Doc Comment

on:
  workflow_call:
    secrets:
      comment_bot_token:
        required: true

jobs:
  upload_pr_documentation:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.conclusion == 'success'

    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "doc-delete-artifact"
            })[0];
            var download = await github.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/doc-delete-artifact.zip', Buffer.from(download.data));
        
      - run: |
          mkdir build_dir
          unzip doc-delete-artifact.zip -d build_dir

      - name: Get pr_number
        run: |
          echo "pr_number=$(cat ./build_dir/pr_number)" >> $GITHUB_ENV
          rm -rf ./build_dir/pr_number

      - name: Find doc comment
        if: ${{ always() }}
        uses: peter-evans/find-comment@v2
        id: find_comment
        with:
          issue-number: ${{ env.pr_number }}
          body-includes: docs for this PR

      - name: Update doc comment if necessary
        if: steps.find_comment.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          token: ${{ secrets.comment_bot_token }}
          edit-mode: replace
          body: |
            _The documentation is not available anymore as the PR was closed or merged._