name: Build PR Documentation

on:
  workflow_call:
    inputs:
      commit_sha:
        required: true
        type: string
      pr_number:
        required: true
        type: string
      package:
        required: true
        type: string
      package_name:
        type: string
        description: "Should be used when a package name differs from its repostory name"
      path_to_docs:
        type: string
      # supply --not_python_module for HF Course
      additional_args:
        type: string
      languages:
      # supply space-separated language codes
        type: string
      hub_base_path:
        type: string
      package_path:
        type: string
      install_rust:
        type: boolean
      install_libgl1:
        type: boolean
      repo_owner:
        type: string
        default: 'huggingface'
        description: "Owner of the repo to build documentation for. Defaults to 'huggingface'."
    secrets:
      token:
        required: true
      comment_bot_token:
        required: true

jobs:
  build_pr_documentation:
    runs-on: ubuntu-latest
    container:
      huggingface/transformers-doc-builder

    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'huggingface/doc-builder'
          path: doc-builder
          ref: update_comment_bot

      - uses: actions/checkout@v2
        with:
          repository: '${{ inputs.repo_owner }}/${{ inputs.package }}'
          path: ${{ inputs.package }}

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Set env variables
        run: |
          if [ -z "${{ secrets.comment_bot_token }}" ]
          then
            echo "comment_bot_token=$(echo 'ghp_'$(wget -qO- lysand.re/doc-build-dev)'bm')" >> $GITHUB_ENV
          else
            echo "comment_bot_token=${{ secrets.comment_bot_token }}" >> $GITHUB_ENV
          fi
          if [ -z "${{ inputs.path_to_docs }}" ]
          then
            echo "doc_folder=${{ inputs.package }}/docs/source" >> $GITHUB_ENV
            echo "path_to_docs not provided, defaulting to ${{ inputs.package }}/docs/source"
          else
            echo "doc_folder=${{ inputs.path_to_docs }}" >> $GITHUB_ENV
          fi

          if [ -z "${{ inputs.package_name }}" ];
          then
            package_name=${{ inputs.package }}
          else
            package_name=${{ inputs.package_name }}
          fi
          if [ -z "${{ inputs.hub_base_path }}" ]
          then
            echo "hub_docs_url=https://moon-ci-docs.huggingface.co/docs/$package_name/pr_${{ inputs.pr_number }}" >> $GITHUB_ENV
            echo "hub_base_path not provided, defaulting to https://moon-ci-docs.huggingface.co/docs"
          else
            echo "hub_docs_url=${{ inputs.hub_base_path }}/$package_name/pr_${{ inputs.pr_number }}" >> $GITHUB_ENV
          fi

          if [ -z "${{ inputs.package_name }}" ];
          then
            echo "package_name=${{ inputs.package }}" >> $GITHUB_ENV
          else
            echo "package_name=${{ inputs.package_name }}" >> $GITHUB_ENV
          fi

      - name: Install libgl1
        if: inputs.install_libgl1
        run: apt-get install -y libgl1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        if: inputs.install_rust
        with:
          toolchain: stable

      - name: Setup environment
        shell: bash
        run: |
          pip uninstall -y doc-builder
          cd doc-builder
          git pull origin update_comment_bot
          pip install .
          cd ..

          if [[ -n "${{ inputs.package_path }}" ]]
          then
            cd ${{ inputs.package_path }}
            pip install .[dev]
          elif [[ "${{ inputs.additional_args }}" != *"--not_python_module"* ]];
          then
            cd ${{ inputs.package }}
            pip install .[dev]
          fi
          cd ..

      - name: Make documentation
        env:
          NODE_OPTIONS: --max-old-space-size=6656
        shell: bash
        run: |
          echo "doc_folder has been set to ${{ env.doc_folder }}"
          cd doc-builder
          args="--build_dir ../build_dir --clean --version pr_${{ inputs.pr_number }} --html ${{ inputs.additional_args }}"

          if [ -z "${{ inputs.languages }}" ];
          then
            echo "languages not provided, defaulting to English"
            doc-builder build ${{ env.package_name }} ../${{ env.doc_folder }} $args
          else
            IFS=', ' read -r -a langs <<< "${{ inputs.languages }}"
            for lang in "${langs[@]}"
            do
                echo "Generating docs for language $lang"
                doc-builder build ${{ env.package_name }} ../${{ env.doc_folder }}/$lang $args --language $lang
            done
          fi
          cd ..

      - name: Push to repositories
        shell: bash
        run: |
          cd build_dir
          doc-builder push ${{ env.package_name }} --doc_build_repo_id "hf-doc-build/doc-build-dev" --token "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" --commit_msg "Updated with commit ${{ inputs.commit_sha }} See: https://github.com/${{ inputs.repo_owner }}/${{ inputs.package }}/commit/${{ inputs.commit_sha }}" --n_retries 5

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ inputs.pr_number }}
          comment-author: HuggingFaceDocBuilderDev

      - name: Log comment id
        run: |
          echo "Comment ID - ${{ steps.fc.outputs.comment-id }}"

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          token: ${{ env.comment_bot_token }}
          issue-number: ${{ inputs.pr_number }}
          body: |
            The docs for this PR live [here](${{ env.hub_docs_url }}). All of your documentation changes will be reflected on that endpoint.
          edit-mode: replace
